U-Boot for LibreTech CC
=======================

LibreTech CC is a single board computer manufactured by Libre Technology
with the following specifications:

 - Amlogic S905X ARM Cortex-A53 quad-core SoC @ 2GHz
 - ARM Mali 450 GPU
 - 2GB DDR3 SDRAM
 - Gigabit Ethernet
 - HDMI 2.0 4K/60Hz display
 - 40-pin GPIO header
 - 4 x USB 2.0 Host, 1 x USB OTG
 - eMMC, microSD
 - Infrared receiver

Schematics are available on the manufacturer website.

Currently the u-boot port supports the following devices:
 - serial
 - eMMC, microSD
 - Ethernet

u-boot compilation
==================

 > export ARCH=arm
 > export CROSS_COMPILE=aarch64-none-elf-
 > make libretech-cc_defconfig
 > make

Image creation
==============

Amlogic doesn't provide sources for the firmware and for tools needed
to create the bootloader image, so it is necessary to obtain them from
the git tree published by the board vendor:

 > TODO get and build FIP, declare FIPDIR
 > mkdir fip

 > cp $FIPDIR/gxl/bl2.bin fip/
 > cp $FIPDIR/gxl/acs.bin fip/
 > cp $FIPDIR/gxl/bl21.bin fip/
 > cp $FIPDIR/gxl/bl30.bin fip/
 > cp $FIPDIR/gxl/bl301.bin fip/
 > cp $FIPDIR/gxl/bl31.img fip/
 > cp u-boot.bin fip/bl33.bin

 > $FIPDIR/blx_fix.sh \
	fip/bl30.bin \
	fip/zero_tmp \
	fip/bl30_zero.bin \
	fip/bl301.bin \
	fip/bl301_zero.bin \
	fip/bl30_new.bin \
	bl30

 > $FIPDIR/acs_tool.pyc fip/bl2.bin fip/bl2_acs.bin fip/acs.bin 0

 > $FIPDIR/blx_fix.sh \
	fip/bl2_acs.bin \
	fip/zero_tmp \
	fip/bl2_zero.bin \
	fip/bl21.bin \
	fip/bl21_zero.bin \
	fip/bl2_new.bin \
	bl2

 > $FIPDIR/gxl/aml_encrypt_gxl --bl3enc --input fip/bl30_new.bin
 > $FIPDIR/gxl/aml_encrypt_gxl --bl3enc --input fip/bl31.img
 > $FIPDIR/gxl/aml_encrypt_gxl --bl3enc --input fip/bl33.bin
 > $FIPDIR/gxl/aml_encrypt_gxl --bl2sig --input fip/bl2_new.bin --output fip/bl2.n.bin.sig
 > $FIPDIR/gxl/aml_encrypt_gxl --bootmk \
		--output fip/u-boot.bin \
		--bl2 fip/bl2.n.bin.sig \
		--bl30 fip/bl30_new.bin.enc \
		--bl31 fip/bl31.img.enc \
		--bl33 fip/bl33.bin.enc

and then write the image to SD with:

 > DEV=/dev/your_sd_device
 > dd if=fip/u-boot.bin.sd.bin of=$DEV conv=fsync,notrunc bs=512 skip=1 seek=1
 > dd if=fip/u-boot.bin.sd.bin of=$DEV conv=fsync,notrunc bs=1 count=444
